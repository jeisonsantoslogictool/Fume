@page "/catalog/category/{CategoryId:int}"
@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService sweetAlertService
@layout MainLayout

<style>
    .breadcrumb-container {
        background: white;
        padding: 15px 0;
        margin-bottom: 30px;
        border-bottom: 1px solid #e0e0e0;
    }

    .breadcrumb-list {
        list-style: none;
        padding: 0;
        margin: 0;
        display: flex;
        gap: 10px;
        flex-wrap: wrap;
    }

    .breadcrumb-item {
        display: inline-flex;
        align-items: center;
        font-size: 0.95rem;
    }

    .breadcrumb-item a {
        color: #25b09b;
        text-decoration: none;
        transition: color 0.3s ease;
    }

    .breadcrumb-item a:hover {
        color: #1b8e7f;
        text-decoration: underline;
    }

    .breadcrumb-item.active {
        color: #666;
        font-weight: 600;
    }

    .breadcrumb-separator {
        margin: 0 8px;
        color: #ddd;
    }

    .category-header {
        background: linear-gradient(135deg, #25b09b 0%, #1b70b3 100%);
        padding: 40px 20px;
        margin-bottom: 40px;
        border-radius: 8px;
        color: white;
        display: flex;
        align-items: center;
        gap: 30px;
    }

    .category-header-image {
        width: 150px;
        height: 150px;
        background: rgba(255, 255, 255, 0.2);
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        overflow: hidden;
        flex-shrink: 0;
    }

    .category-header-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .category-header-info h1 {
        font-size: 2.5rem;
        margin: 0 0 10px 0;
        font-weight: 700;
    }

    .category-header-info p {
        font-size: 1rem;
        margin: 0;
        opacity: 0.95;
    }

    .section-header {
        margin-bottom: 30px;
    }

    .section-header h2 {
        font-size: 1.8rem;
        color: #2c3e50;
        margin: 0 0 20px 0;
        padding-bottom: 15px;
        border-bottom: 3px solid #25b09b;
        display: inline-block;
    }

    .subcategories-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: 20px;
        margin-bottom: 50px;
    }

    .subcategory-card {
        background: white;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        transition: all 0.3s ease;
        cursor: pointer;
        border: 2px solid transparent;
    }

    .subcategory-card:hover {
        transform: translateY(-6px);
        box-shadow: 0 8px 20px rgba(37, 176, 155, 0.25);
        border-color: #25b09b;
    }

    .subcategory-image-container {
        width: 100%;
        height: 180px;
        background: linear-gradient(135deg, #f5f5f5 0%, #e8e8e8 100%);
        display: flex;
        align-items: center;
        justify-content: center;
        overflow: hidden;
    }

    .subcategory-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s ease;
    }

    .subcategory-card:hover .subcategory-image {
        transform: scale(1.08);
    }

    .subcategory-info {
        padding: 18px;
        text-align: center;
    }

    .subcategory-name {
        font-size: 1.1rem;
        font-weight: 700;
        color: #2c3e50;
        margin: 0 0 10px 0;
    }

    .product-count {
        font-size: 0.9rem;
        color: #999;
        margin-bottom: 12px;
    }

    .enter-button {
        width: 100%;
        background: linear-gradient(135deg, #25b09b 0%, #1b8e7f 100%);
        color: white;
        border: none;
        padding: 10px;
        border-radius: 6px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        font-size: 0.95rem;
    }

    .enter-button:hover {
        background: linear-gradient(135deg, #1b8e7f 0%, #166a62 100%);
        transform: scale(1.02);
    }

    .loading-container {
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 400px;
    }

    .spinner {
        border: 4px solid #f3f3f3;
        border-top: 4px solid #25b09b;
        border-radius: 50%;
        width: 40px;
        height: 40px;
        animation: spin 1s linear infinite;
    }

    @@keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }

    .empty-state {
        text-align: center;
        padding: 60px 20px;
        color: #999;
    }

    .empty-state-icon {
        font-size: 4rem;
        margin-bottom: 20px;
        opacity: 0.5;
    }

    .back-button {
        display: inline-flex;
        align-items: center;
        gap: 8px;
        background: white;
        color: #25b09b;
        border: 2px solid #25b09b;
        padding: 10px 20px;
        border-radius: 6px;
        cursor: pointer;
        font-weight: 600;
        transition: all 0.3s ease;
        text-decoration: none;
        margin-bottom: 20px;
    }

    .back-button:hover {
        background: #25b09b;
        color: white;
    }

    @@media (max-width: 768px) {
        .category-header {
            flex-direction: column;
            text-align: center;
        }

        .category-header-image {
            width: 120px;
            height: 120px;
        }

        .category-header-info h1 {
            font-size: 1.8rem;
        }

        .subcategories-grid {
            grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
            gap: 15px;
        }
    }
</style>

<div class="container">
    <!-- Breadcrumb -->
    <div class="breadcrumb-container">
        <ul class="breadcrumb-list">
            <li class="breadcrumb-item">
                <a href="/catalog">Cat√°logo</a>
            </li>
            <li class="breadcrumb-separator">/</li>
            <li class="breadcrumb-item active">
                @(Category?.Name ?? "Cargando...")
            </li>
        </ul>
    </div>

    <button class="back-button" @onclick="GoBackAsync">
        ‚Üê Volver al Cat√°logo
    </button>

    @if (Category is null)
    {
        <div class="loading-container">
            <div class="spinner"></div>
        </div>
    }
    else
    {
        <!-- Category Header -->
        <div class="category-header">
            <div class="category-header-image">
                @if (Category.Image != null && Category.Image.Length > 0)
                {
                    <img src="data:image/png;base64,@Category.ImageString" alt="@Category.Name" />
                }
                else
                {
                    <div style="text-align: center; color: rgba(255,255,255,0.3); font-size: 3rem;">
                        üìÅ
                    </div>
                }
            </div>
            <div class="category-header-info">
                <h1>@Category.Name</h1>
                <p>
                    @if (Category.SubCategories != null && Category.SubCategories.Any())
                    {
                        <span>@Category.SubCategories.Count subcategor√≠as disponibles</span>
                    }
                    else
                    {
                        <span>Sin subcategor√≠as disponibles</span>
                    }
                </p>
            </div>
        </div>

        <!-- Subcategories Section -->
        @if (Category.SubCategories != null && Category.SubCategories.Any())
        {
            <div class="section-header">
                <h2>Subcategor√≠as</h2>
            </div>

            <div class="subcategories-grid">
                @foreach (var subcategory in Category.SubCategories)
                {
                    <div class="subcategory-card" @onclick="() => GoToSubcategoryAsync(subcategory.Id)">
                        <div class="subcategory-image-container">
                            @if (subcategory.Image != null && subcategory.Image.Length > 0)
                            {
                                <img src="data:image/png;base64,@subcategory.ImageString" alt="@subcategory.Name" class="subcategory-image" />
                            }
                            else
                            {
                                <div style="text-align: center; color: #ccc; font-size: 2.5rem;">
                                    üìÇ
                                </div>
                            }
                        </div>
                        <div class="subcategory-info">
                            <h3 class="subcategory-name">@subcategory.Name</h3>
                            <div class="product-count">
                                @if (subcategory.ProductSubCategoriesNumber > 0)
                                {
                                    <span>@subcategory.ProductSubCategoriesNumber productos</span>
                                }
                                else
                                {
                                    <span>Sin productos</span>
                                }
                            </div>
                            <button class="enter-button" @onclick="() => GoToSubcategoryAsync(subcategory.Id)">
                                Ver Productos ‚Üí
                            </button>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="empty-state">
                <div class="empty-state-icon">üì≠</div>
                <h3>Esta categor√≠a no tiene subcategor√≠as</h3>
                <p>Por favor, selecciona otra categor√≠a</p>
            </div>
        }
    }
</div>

@code {
    [Parameter]
    public int CategoryId { get; set; }

    private Category? Category { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadCategoryAsync();
    }

    private async Task LoadCategoryAsync()
    {
        try
        {
            var response = await repository.Get<Category>($"/api/categories/{CategoryId}");
            if (!response.Error)
            {
                Category = response.Response;
            }
            else
            {
                await sweetAlertService.FireAsync("Error", "No se pudo cargar la categor√≠a", SweetAlertIcon.Error);
                navigationManager.NavigateTo("/catalog");
            }
        }
        catch (Exception ex)
        {
            await sweetAlertService.FireAsync("Error", ex.Message, SweetAlertIcon.Error);
            navigationManager.NavigateTo("/catalog");
        }
    }

    private void GoToSubcategoryAsync(int subcategoryId)
    {
        navigationManager.NavigateTo($"/catalog/subcategory/{subcategoryId}");
    }

    private void GoBackAsync()
    {
        navigationManager.NavigateTo("/catalog");
    }
}
