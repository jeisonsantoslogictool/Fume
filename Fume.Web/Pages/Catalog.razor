@page "/catalog"
@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService sweetAlertService
@using MudBlazor
@layout MainLayout

<style>
    .catalog-header {
        background: linear-gradient(135deg, #25b09b 0%, #1b70b3 100%);
        padding: 40px 20px;
        margin-bottom: 40px;
        border-radius: 8px;
        color: white;
        text-align: center;
    }

    .catalog-header h1 {
        font-size: 2.5rem;
        font-weight: 700;
        margin: 0;
    }

    .catalog-header p {
        font-size: 1.1rem;
        margin: 10px 0 0 0;
        opacity: 0.95;
    }

    .categories-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
        gap: 25px;
        margin-bottom: 40px;
    }

    .category-card {
        background: white;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        transition: all 0.3s ease;
        cursor: pointer;
        border: 2px solid transparent;
    }

    .category-card:hover {
        transform: translateY(-8px);
        box-shadow: 0 8px 24px rgba(37, 176, 155, 0.25);
        border-color: #25b09b;
    }

    .category-image-container {
        width: 100%;
        height: 200px;
        background: linear-gradient(135deg, #f5f5f5 0%, #e8e8e8 100%);
        display: flex;
        align-items: center;
        justify-content: center;
        overflow: hidden;
    }

    .category-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s ease;
    }

    .category-card:hover .category-image {
        transform: scale(1.05);
    }

    .category-info {
        padding: 20px;
        text-align: center;
    }

    .category-name {
        font-size: 1.2rem;
        font-weight: 700;
        color: #2c3e50;
        margin: 0 0 10px 0;
    }

    .category-stats {
        display: flex;
        justify-content: space-around;
        gap: 10px;
        margin-top: 15px;
        padding-top: 15px;
        border-top: 1px solid #e0e0e0;
    }

    .stat {
        flex: 1;
        text-align: center;
    }

    .stat-number {
        font-size: 1.3rem;
        font-weight: 700;
        color: #25b09b;
        display: block;
    }

    .stat-label {
        font-size: 0.85rem;
        color: #999;
        margin-top: 5px;
    }

    .enter-button {
        width: 100%;
        margin-top: 12px;
        background: linear-gradient(135deg, #25b09b 0%, #1b8e7f 100%);
        color: white;
        border: none;
        padding: 12px;
        border-radius: 6px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .enter-button:hover {
        background: linear-gradient(135deg, #1b8e7f 0%, #166a62 100%);
        transform: scale(1.02);
    }

    .loading-container {
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 400px;
    }

    .spinner {
        border: 4px solid #f3f3f3;
        border-top: 4px solid #25b09b;
        border-radius: 50%;
        width: 40px;
        height: 40px;
        animation: spin 1s linear infinite;
    }

    @@keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }

    .empty-state {
        text-align: center;
        padding: 60px 20px;
        color: #999;
    }

    .empty-state-icon {
        font-size: 4rem;
        margin-bottom: 20px;
        opacity: 0.5;
    }

    @@media (max-width: 768px) {
        .catalog-header h1 {
            font-size: 1.8rem;
        }

        .catalog-header p {
            font-size: 0.95rem;
        }

        .categories-grid {
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 15px;
        }
    }
</style>

<div class="container">
    <div class="catalog-header">
        <h1>Nuestras Categor√≠as</h1>
        <p>Explora nuestros productos organizados por categor√≠as</p>
    </div>

    @if (Categories is null)
    {
        <div class="loading-container">
            <div class="spinner"></div>
        </div>
    }
    else if (!Categories.Any())
    {
        <div class="empty-state">
            <div class="empty-state-icon">üì¶</div>
            <h3>No hay categor√≠as disponibles</h3>
            <p>Por favor, intenta m√°s tarde</p>
        </div>
    }
    else
    {
        <div class="categories-grid">
            @foreach (var category in Categories)
            {
                <div class="category-card" @onclick="() => GoToCategoryAsync(category.Id)">
                    <div class="category-image-container">
                        @if (category.Image != null && category.Image.Length > 0)
                        {
                            <img src="data:image/png;base64,@category.ImageString" alt="@category.Name" class="category-image" />
                        }
                        else
                        {
                            <div style="text-align: center; color: #ccc; font-size: 3rem;">
                                üìÅ
                            </div>
                        }
                    </div>
                    <div class="category-info">
                        <h2 class="category-name">@category.Name</h2>
                        <div class="category-stats">
                            <div class="stat">
                                <span class="stat-number">@category.SubCategoriesNumber</span>
                                <span class="stat-label">Subcategor√≠as</span>
                            </div>
                            <div class="stat">
                                <span class="stat-number">@category.ProductCategoriesNumber</span>
                                <span class="stat-label">Productos</span>
                            </div>
                        </div>
                        <button class="enter-button" @onclick="() => GoToCategoryAsync(category.Id)">
                            Ver Categor√≠a ‚Üí
                        </button>
                    </div>
                </div>
            }
        </div>
    }
</div>

@code {
    private List<Category>? Categories { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadCategoriesAsync();
    }

    private async Task LoadCategoriesAsync()
    {
        try
        {
            var response = await repository.Get<List<Category>>("/api/categories?RecordsNumber=100");
            if (!response.Error)
            {
                Categories = response.Response ?? new List<Category>();
            }
            else
            {
                await sweetAlertService.FireAsync("Error", "No se pudieron cargar las categor√≠as", SweetAlertIcon.Error);
                Categories = new List<Category>();
            }
        }
        catch (Exception ex)
        {
            await sweetAlertService.FireAsync("Error", ex.Message, SweetAlertIcon.Error);
            Categories = new List<Category>();
        }
    }

    private void GoToCategoryAsync(int categoryId)
    {
        navigationManager.NavigateTo($"/catalog/category/{categoryId}");
    }
}
